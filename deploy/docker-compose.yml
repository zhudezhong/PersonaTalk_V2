version: '3.8'

services:
  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: personatalk-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=personatalk
      - MYSQL_USER=personatalk
      - MYSQL_PASSWORD=personatalk123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      # 初始化脚本
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot123"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - personatalk-network

  # PersonaTalk Backend 服务
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: personatalk-backend
    ports:
      - "8888:8888"
    environment:
      # 数据库配置
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=personatalk
      - MYSQL_PASSWORD=personatalk123
      - MYSQL_DATABASE=personatalk
      
      # 模型服务配置
      - OPENAI_API_KEY=${OPENAI_API_KEY:-sk-b0bb3a405dd2fed65bae69d8ce9bf643ca290bdd4210e5a7462ebd1a232b9c00}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-https://openai.qiniu.com/v1}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-oss-120b}
      - TTS_MODEL=${TTS_MODEL:-tts}
      - MODEL_SERVICE_TYPE=${MODEL_SERVICE_TYPE:-qiniu}
      
      # 应用配置
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      
    volumes:
      # 音频文件存储
      - audio_files:/app/audio
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - personatalk-network

  # PersonaTalk Web 前端服务
  web:
    build:
      context: ../web/personaltalk
      dockerfile: Dockerfile
      target: production
    container_name: personatalk-web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=/api
      - VITE_WS_URL=/ws
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - personatalk-network

  # Nginx 反向代理服务
  nginx:
    image: nginx:alpine
    container_name: personatalk-nginx
    ports:
      - "80:80"
      - "8003:8003"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - personatalk-network

# 数据卷
volumes:
  mysql_data:
    driver: local
  audio_files:
    driver: local

# 网络配置
networks:
  personatalk-network:
    driver: bridge