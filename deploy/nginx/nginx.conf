worker_processes auto;

events {
    worker_connections 512;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    # 基本配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 2000M;
    
    # Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    resolver 127.0.0.11 valid=10s;
    resolver_timeout 3s;

    server {
        listen 80;
        listen 8003;
        server_name localhost;

        # 后端 API 路由
        set $backend_host "backend";
        location ^~ /api/ {
            proxy_http_version 1.1;
            proxy_pass http://$backend_host:8888;
            proxy_redirect off;
            proxy_buffering off;
            
            # 连接和升级头部
            proxy_set_header Connection "upgrade";
            proxy_set_header Upgrade $http_upgrade;
            
            # 标准代理头部
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $http_x_forwarded_host;
            proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # 超时配置（AI 请求可能需要较长时间）
            proxy_connect_timeout 60s;
            proxy_read_timeout 1800s;
            proxy_send_timeout 1800s;
            
            # 错误处理
            proxy_intercept_errors on;
            error_page 502 503 504 /50x.html;
        }

        # WebSocket 支持
        location ^~ /ws {
            proxy_http_version 1.1;
            proxy_pass http://$backend_host:8888;
            proxy_redirect off;
            proxy_buffering off;
            
            # WebSocket 专用头部
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # 标准代理头部
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
            
            # WebSocket 长连接配置
            proxy_connect_timeout 60s;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            
            # 保持连接活跃
            proxy_cache_bypass $http_upgrade;
        }

        # 前端静态文件
        set $web_host "web";
        location / {
            proxy_http_version 1.1;
            proxy_pass http://$web_host:3000;
            proxy_redirect off;
            proxy_buffering off;
            
            # 支持热重载（开发环境）
            proxy_set_header Connection "upgrade";
            proxy_set_header Upgrade $http_upgrade;
            
            # 标准代理头部
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $http_x_forwarded_host;
            proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # 前端服务超时
            proxy_connect_timeout 10s;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            
            # 缓存控制
            proxy_cache_bypass $http_upgrade;
        }
        
        # 错误页面
        location = /50x.html {
            return 500 '{"error": "Internal Server Error", "message": "Backend service is unavailable"}';
            add_header Content-Type application/json;
        }
        
    }
}
